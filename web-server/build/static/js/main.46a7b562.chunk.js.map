{"version":3,"sources":["components/Navigation.js","components/Footer.js","pages/Author.js","components/Loading.js","pages/Dashboard.js","components/LoadingAlert.js","pages/Resources.js","pages/Images.js","pages/Instances.js","pages/Containers.js","App.js","index.js"],"names":["Navigation","React","createElement","id","className","NavLink","to","activeClassName","type","ListAltIcon","DnsOutlinedIcon","GridViewIcon","ViewInArIcon","SpeedRoundedIcon","AccountBoxIcon","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Footer","Author","href","MailOutlineIcon","target","rel","GitHubIcon","scope","Loading","class","HourglassEmptyRoundedIcon","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","this","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","Dashboard","_useState","useState","_useState2","_slicedToArray","loaded","setLoaded","_useState3","_useState4","copiedInstancesJSON","setCopiedInstancesJSON","_useState5","_useState6","copiedContainersJSON","setCopiedContainersJSON","_useState7","_useState8","copiedImagesJSON","setCopiedImagesJSON","_useState9","_useState10","instances","setInstances","_useState11","_useState12","images","setImages","_useState13","_useState14","containers","setContainers","useEffect","_ref","_asyncToGenerator","_callee","instances_response","containers_response","images_response","fetched_images","fetched_containers","_context","fetch","concat","config","API_SERVER_IP","API_SERVER_PORT","json","Array","isArray","console","error","apply","arguments","dataFetch","map","image","index","key","id_short","tag","size","created","instance","ip","port","api_version","status","CheckCircleIcon","CancelIcon","style","overflowX","maxWidth","whiteSpace","ports","CopyToClipboard","text","JSON","stringify","onCopy","ContentCopyRoundedIcon","ContentCopyIcon","LoadingAlert","COLORS","ResourcePieChart","resources","chart_subject","resource","chart_data","container","cpu_usage","block_io","network_io","ResponsiveContainer","width","height","PieChart","Pie","data","cx","cy","outerRadius","innerRadius","paddingAngle","fill","dataKey","label","fontSize","entry","Cell","Tooltip","Legend","RamPieChart","_ref2","arr","all_used_ram","parseFloat","memory_usage","log","single_container_used_ram","toFixed","k","CPUBarChart","_ref3","BarChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","tick","interval","textAnchor","angle","dy","YAxis","Bar","Resources","setResources","_ref4","resources_response","fetched_resources","memory_limit","Images","Instances","startContainer","containerId","setLoading","ok","t0","_x","_x2","unpauseContainer","_callee2","_context2","_x3","_x4","pauseContainer","_callee3","_context3","_x5","_x6","stopContainer","_callee4","_context4","_x7","_x8","restartContainer","_ref5","_callee5","_context5","_x9","_x10","killContainer","_ref6","_callee6","_context6","_x11","_x12","Containers","loadingAction","setLoadingAction","fetchContainers","_ref7","_callee7","response","_context7","setInterval","clearInterval","onClick","disabled","PowerSettingsNewRoundedIcon","PlayCircleOutlineRoundedIcon","PauseCircleOutlineRoundedIcon","RemoveCircleOutlineRoundedIcon","HistoryRoundedIcon","HighlightOffRoundedIcon","substring","App","BrowserRouter","Routes","Route","path","element","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.46a7b562.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\n// import MUI icons\nimport AccountBoxIcon from \"@mui/icons-material/AccountBox\";\nimport ListAltIcon from \"@mui/icons-material/ListAlt\";\nimport ViewInArIcon from \"@mui/icons-material/ViewInAr\";\nimport GridViewIcon from \"@mui/icons-material/GridView\";\nimport DnsOutlinedIcon from \"@mui/icons-material/DnsOutlined\";\nimport SpeedRoundedIcon from \"@mui/icons-material/SpeedRounded\";\n\nfunction Navigation() {\n   return (\n      <section id=\"navigation\" className=\"Navigation\">\n         <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top m-3 rounded\">\n            <div className=\"container-fluid py-2\">\n               {/* navigation */}\n               <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n                  <ul className=\"navbar-nav ml-auto\">\n                     <li className=\"nav-item active\">\n                        <NavLink\n                           className=\"nav-link text-light\"\n                           to=\"/\"\n                           activeClassName=\"active\"\n                        >\n                           <button\n                              type=\"button\"\n                              className=\"btn btn-dark d-flex align-items-center\"\n                           >\n                              <ListAltIcon />\n                              &nbsp;Kokpit\n                           </button>\n                        </NavLink>\n                     </li>\n                     <li className=\"nav-item active\">\n                        <NavLink\n                           className=\"nav-link text-light\"\n                           to=\"/instances\"\n                           activeClassName=\"active\"\n                        >\n                           <button\n                              type=\"button\"\n                              className=\"btn btn-dark d-flex align-items-center\"\n                           >\n                              <DnsOutlinedIcon />\n                              &nbsp;Instancje\n                           </button>\n                        </NavLink>\n                     </li>\n                     <li className=\"nav-item active\">\n                        <NavLink\n                           className=\"nav-link text-light\"\n                           to=\"/images\"\n                           activeClassName=\"active\"\n                        >\n                           <button\n                              type=\"button\"\n                              className=\"btn btn-dark d-flex align-items-center\"\n                           >\n                              <GridViewIcon />\n                              &nbsp;Obrazy\n                           </button>\n                        </NavLink>\n                     </li>\n                     <li className=\"nav-item active\">\n                        <NavLink\n                           className=\"nav-link text-light\"\n                           to=\"/containers\"\n                           activeClassName=\"active\"\n                        >\n                           <button\n                              type=\"button\"\n                              className=\"btn btn-dark d-flex align-items-center\"\n                           >\n                              <ViewInArIcon />\n                              &nbsp;Kontenery\n                           </button>\n                        </NavLink>\n                     </li>\n                     <li className=\"nav-item active\">\n                        <NavLink\n                           className=\"nav-link text-light\"\n                           to=\"/resources\"\n                           activeClassName=\"active\"\n                        >\n                           <button\n                              type=\"button\"\n                              className=\"btn btn-dark d-flex align-items-center\"\n                           >\n                              <SpeedRoundedIcon />\n                              &nbsp;Zasoby\n                           </button>\n                        </NavLink>\n                     </li>\n                     <li className=\"nav-item active\">\n                        <NavLink\n                           className=\"nav-link text-light\"\n                           to=\"/author\"\n                           activeClassName=\"active\"\n                        >\n                           <button\n                              type=\"button\"\n                              className=\"btn btn-dark d-flex align-items-center\"\n                           >\n                              <AccountBoxIcon />\n                              &nbsp;Autor\n                           </button>\n                        </NavLink>\n                     </li>\n                  </ul>\n               </div>\n\n               {/* brand */}\n               <h2 className=\"text-light ms-auto mx-5\">dockdash</h2>\n\n               {/* mobile toggler */}\n               <button\n                  className=\"navbar-toggler\"\n                  type=\"button\"\n                  data-toggle=\"collapse\"\n                  data-target=\"#navbarResponsive\"\n                  aria-controls=\"navbarResponsive\"\n                  aria-expanded=\"false\"\n                  aria-label=\"Toggle navigation\"\n               >\n                  <span className=\"navbar-toggler-icon\"></span>\n               </button>\n            </div>\n         </nav>\n      </section>\n   );\n}\n\nexport default Navigation;\n","import React from \"react\";\n\nfunction Footer() {\n   return (\n      <section className=\"Footer\">\n         <div className=\"row m-3\">\n            <div className=\"col p-4 bg-dark rounded-3 text-light\">\n               <small>wykonanie: Krzysztof Matuszewski</small>\n               <br />\n               <small>\n                  część projektowa pracy magisterskiej, AHE informatyka 2024/2025\n                  st. II, rok 2, sem. 3\n               </small>\n            </div>\n         </div>\n      </section>\n   );\n}\n\nexport default Footer;\n","import React from \"react\";\n\n// import navigation and footer components\nimport Navigation from \"../components/Navigation.js\";\nimport Footer from \"../components/Footer.js\";\n\n// import icons\nimport MailOutlineIcon from \"@mui/icons-material/MailOutline\";\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\nimport AccountBoxIcon from \"@mui/icons-material/AccountBox\";\n\nfunction Author() {\n   return (\n      <div className=\"Author\">\n         <Navigation />\n         <div className=\"row m-0 p-5\" /> {/* empty row just for margin */}\n         <div className=\"row m-5\">\n            <div className=\"col-lg-12 col-md-7 col-12 rounded\">\n               <div className=\"row\">\n                  <div className=\"col-5 p-5 bg-warning rounded-3\">\n                     <h3 className=\"d-flex align-items-center\">\n                        <AccountBoxIcon />\n                        &nbsp;Autor\n                     </h3>\n\n                     <p className=\"h3 fw-bold\">\n                        Krzysztof{\" \"}\n                        <text className=\"text-muted\">Matuszewski</text>\n                     </p>\n\n                     <div className=\"mt-1 mb-4\">\n                        <a\n                           href=\"mailto:krzysiekmatuszewski@outlook.com\"\n                           className=\"btn btn-dark me-2\"\n                        >\n                           <MailOutlineIcon />\n                           &nbsp;&nbsp; Email\n                        </a>\n\n                        <a\n                           href=\"https://github.com/matuszewski\"\n                           target=\"_blank\"\n                           rel=\"noopener noreferrer\"\n                           className=\"btn btn-dark me-2\"\n                        >\n                           <GitHubIcon />\n                           &nbsp;&nbsp; GitHub\n                        </a>\n                     </div>\n\n                     <p className=\"text-dark mb-2\">AHE Łódź 2024/2025</p>\n                     <p className=\"text-dark mb-2\">\n                        Część projektowa pracy magisterskiej\n                     </p>\n                  </div>\n\n                  <div className=\"col-4 p-5 bg-light rounded-3\">\n                     <table className=\"table table-light table-hover\">\n                        <tbody>\n                           <tr>\n                              <th className=\"p-2 small\" scope=\"row\">\n                                 stopień\n                              </th>\n                              <td className=\"p-2 small\">II</td>\n                           </tr>\n                           <tr>\n                              <th className=\"p-2 small\" scope=\"row\">\n                                 kierunek\n                              </th>\n                              <td className=\"p-2 small\">informatyka</td>\n                           </tr>\n                           <tr>\n                              <th className=\"p-2 small\" scope=\"row\">\n                                 specializacja\n                              </th>\n                              <td className=\"p-2 small\">\n                                 sieci teleinformatyczne\n                              </td>\n                           </tr>\n                           <tr>\n                              <th className=\"p-2 small\" scope=\"row\">\n                                 rok\n                              </th>\n                              <td className=\"p-2 small\">II</td>\n                           </tr>\n                           <tr>\n                              <th className=\"p-2 small\" scope=\"row\">\n                                 semestr\n                              </th>\n                              <td className=\"p-2 small\">3</td>\n                           </tr>\n                           <tr>\n                              <th className=\"p-2 small\" scope=\"row\">\n                                 numer indeksu\n                              </th>\n                              <td className=\"p-2 small\">160802</td>\n                           </tr>\n\n                           <tr>\n                              <th className=\"p-2 small\" scope=\"row\">\n                                 promotor\n                              </th>\n                              <td className=\"p-2 small\">\n                                 dr inż. Mateusz Zieliński\n                              </td>\n                           </tr>\n                        </tbody>\n                     </table>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <Footer />\n      </div>\n   );\n}\n\nexport default Author;\n","import React from \"react\";\n\n// import icons\nimport HourglassEmptyRoundedIcon from \"@mui/icons-material/HourglassEmptyRounded\";\n\nfunction Loading() {\n   return (\n      <div className=\"Loading\" class=\"row m-0 m-sm-5\">\n         <div className=\"col-6 col-sm-1 col-md-1 col-xl-4 p-5\">\n            <div className=\"card card-body text-start border-0 p-5 mb-4\"></div>\n         </div>\n\n         <div className=\"col-6 col-sm-10 col-md-10 col-xl-4 p-5\">\n            <div className=\"card card-body shadow text-start text-dark border-0 p-5 mb-4\">\n               <h1 className=\"pb-3 d-flex align-items-center\">\n                  <HourglassEmptyRoundedIcon />\n                  &nbsp;<b>Ładowanie</b>\n               </h1>\n               <p>\n                  Jeśli ładowanie trwa zbyt długo sprawdź ustawienia adresu\n                  serwera API oraz czy jest włączony.\n               </p>\n            </div>\n         </div>\n\n         <div className=\"col-6 col-sm-1 col-md-1 col-xl-4 p-5\">\n            <div className=\"card card-body text-start border-0 p-5 mb-4\"></div>\n         </div>\n      </div>\n   );\n}\n\nexport default Loading;\n","import React, { useEffect, useState } from \"react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n\n// import config file\nimport config from \"../config.json\";\n\n// import navigation and footer components\nimport Navigation from \"../components/Navigation.js\";\nimport Footer from \"../components/Footer.js\";\nimport Loading from \"../components/Loading.js\";\n\n// import icons\nimport ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\nimport ContentCopyRoundedIcon from \"@mui/icons-material/ContentCopyRounded\";\nimport ViewInArIcon from \"@mui/icons-material/ViewInAr\";\nimport GridViewIcon from \"@mui/icons-material/GridView\";\nimport DnsOutlinedIcon from \"@mui/icons-material/DnsOutlined\";\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\n\nfunction Dashboard() {\n   const [loaded, setLoaded] = useState(false);\n\n   const [copiedInstancesJSON, setCopiedInstancesJSON] = useState(false);\n   const [copiedContainersJSON, setCopiedContainersJSON] = useState(false);\n   const [copiedImagesJSON, setCopiedImagesJSON] = useState(false);\n\n   const [instances, setInstances] = useState([]);\n   const [images, setImages] = useState([]);\n   const [containers, setContainers] = useState([]);\n\n   useEffect(() => {\n      const dataFetch = async () => {\n         const instances_response = await (\n            await fetch(\n               `http://${config.API_SERVER_IP}:${config.API_SERVER_PORT}/api/instances`\n            )\n         ).json();\n\n         const containers_response = await await fetch(\n            `http://${config.API_SERVER_IP}:${config.API_SERVER_PORT}/api/wyse/containers` // TODO: extract\n         );\n\n         const images_response = await await fetch(\n            `http://${config.API_SERVER_IP}:${config.API_SERVER_PORT}/api/wyse/images` // TODO: extract\n         );\n\n         const fetched_images = await images_response.json();\n         const fetched_containers = await containers_response.json();\n\n         //console.debug(\"fetched images data:\", fetched_images);\n         //console.debug(\"fetched containers data:\", fetched_containers);\n\n         // SETUP INSTANCES\n         setInstances(instances_response);\n\n         // SETUP IMAGES\n         if (Array.isArray(fetched_images)) {\n            setImages(fetched_images); // set fetched_images as array\n            //setImages(JSON.stringify(instance_response, null, 2)); // set fetched_images as string\n         } else {\n            console.error(\n               \"fetching images from API failed, array was expected but got:\",\n               fetched_images\n            );\n            setImages([]); // preventing rendering issues, setting empty array\n         }\n\n         // SETUP CONTAINERS\n         if (Array.isArray(fetched_containers)) {\n            setContainers(fetched_containers); // set fetched_containers as array\n            //setImages(JSON.stringify(instance_response, null, 2)); // set fetched_containers as string\n         } else {\n            console.error(\n               \"fetching containers from API failed, array was expected but got:\",\n               fetched_containers\n            );\n            setContainers([]); // preventing rendering issues, setting empty array\n         }\n\n         setLoaded(true);\n      };\n      dataFetch();\n   }, []);\n\n   if (!loaded) return <Loading />;\n\n   return (\n      <div className=\"Dashboard\">\n         <Navigation />\n         <div className=\"row m-0 p-5\" /> {/* empty row just for margin */}\n         <div className=\"row m-5\">\n            {/* images */}\n            <div className=\"col-lg-8 col-md-7 col-12\">\n               <div className=\"p-4 my-3 bg-primary rounded-3 text-light\">\n                  <h3 className=\"d-flex align-items-center\">\n                     <GridViewIcon />\n                     &nbsp;Obrazy\n                  </h3>\n               </div>\n\n               <div className=\"p-4 bg-dark rounded-3 text-light\">\n                  <table className=\"table table-dark table-hover small\">\n                     <thead>\n                        <tr>\n                           <th scope=\"col\">ID</th>\n                           <th scope=\"col\">Nazwa</th>\n                           <th scope=\"col\">Tag</th>\n                           <th scope=\"col\" className=\"text-end\">\n                              Rozmiar\n                           </th>\n                           <th scope=\"col\" className=\"text-end\">\n                              Utworzony\n                           </th>\n                        </tr>\n                     </thead>\n                     <tbody>\n                        {images.map((image, index) => (\n                           <tr key={index}>\n                              <td>{image.id_short}</td>\n                              <td>{image.name}</td>\n                              <td>\n                                 <a\n                                    href={image.tag}\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                 >\n                                    {image.tag}\n                                 </a>\n                              </td>\n                              <td className=\"text-end\">{image.size} MB</td>\n                              <td className=\"text-end\">{image.created}</td>\n                           </tr>\n                        ))}\n                     </tbody>\n                  </table>\n               </div>\n            </div>\n\n            {/* instances */}\n            <div className=\"col-lg-4 col-md-7 col-12\">\n               <div className=\"p-4 my-3 bg-primary rounded-3 text-light\">\n                  <h3 className=\"d-flex align-items-center\">\n                     <DnsOutlinedIcon />\n                     &nbsp;Instancje\n                  </h3>\n               </div>\n               <div className=\"p-4 bg-dark rounded-3 text-light\">\n                  <table className=\"table table-dark table-hover small\">\n                     <thead>\n                        <tr>\n                           <th scope=\"col\">Nazwa</th>\n                           <th scope=\"col\">IP</th>\n                           <th scope=\"col\">Port</th>\n                           <th scope=\"col\" className=\"text-end\">\n                              API\n                           </th>\n                           <th scope=\"col\" className=\"text-end\">\n                              Status\n                           </th>\n                        </tr>\n                     </thead>\n                     <tbody>\n                        {Object.keys(instances).map((key, index) => {\n                           const instance = instances[key];\n                           return (\n                              <tr key={index}>\n                                 <td>{key}</td>\n                                 <td>{instance.ip}</td>\n                                 <td>{instance.port}</td>\n                                 <td className=\"text-end\">\n                                    {instance.api_version}\n                                 </td>\n                                 <td className=\"text-end\">\n                                    {instance.status ? <CheckCircleIcon className='text-success' /> : <CancelIcon  className='text-danger' />}\n                                 </td>\n                              </tr>\n                           );\n                        })}\n                     </tbody>\n                  </table>\n               </div>\n            </div>\n\n            {/* containers */}\n            <div className=\"col-lg-12 col-md-7 col-12\">\n               <div className=\"p-4 my-3 bg-primary rounded-3 text-light\">\n                  <h3 className=\"d-flex align-items-center\">\n                     <ViewInArIcon />\n                     &nbsp;Kontenery\n                  </h3>\n               </div>\n\n               <div className=\"p-4 bg-dark rounded-3 text-light\">\n               <div style={{ overflowX: \"auto\", maxWidth: \"100%\", whiteSpace: \"nowrap\" }}>\n\n                  <table className=\"table table-dark table-hover small\">\n                     <thead>\n                        <tr>\n                           <th scope=\"col\">ID</th>\n                           <th scope=\"col\">Nazwa</th>\n                           <th scope=\"col\">Obraz</th>\n                           <th scope=\"col\">Porty</th>\n                           <th scope=\"col\">Utworzony</th>\n                           <th scope=\"col\">Stan</th>\n                        </tr>\n                     </thead>\n                     <tbody>\n                        {containers.map((image, index) => (\n                           <tr key={index}>\n                              <td>{image.id}</td>\n                              <td>{image.name}</td>\n                              <td>{image.image}</td>\n                              <td className=\"text-success\">{image.ports}</td>\n                              <td>{image.created}</td>\n                              <td>{image.status}</td>\n                           </tr>\n                        ))}\n                     </tbody>\n                  </table>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div className=\"row m-5\">\n            {/* instances JSON */}\n            <div className=\"col-lg-4 col-md-6 col-12\">\n               <div className=\"p-4 bg-dark rounded-3 text-light\">\n                  <h3 className=\"d-flex justify-content-between align-items-center\">\n                     Instancje&nbsp;\n                     <span className=\"badge bg-success\">JSON</span>\n                     <CopyToClipboard\n                        text={JSON.stringify(instances, null, 2)}\n                        onCopy={() => setCopiedInstancesJSON(true)}\n                     >\n                        <button className=\"btn btn-sm btn-secondary ms-auto p-3\">\n                           {copiedInstancesJSON ? (\n                              <span>\n                                 Skopiowano listę instancji\n                                 <ContentCopyRoundedIcon />\n                              </span>\n                           ) : (\n                              <ContentCopyIcon />\n                           )}\n                        </button>\n                     </CopyToClipboard>\n                  </h3>\n                  <pre>\n                     <code>{JSON.stringify(instances, null, 2)}</code>\n                  </pre>\n               </div>\n            </div>\n\n            {/* instances JSON */}\n            <div className=\"col-lg-4 col-md-6 col-12\">\n               <div className=\"p-4 bg-dark rounded-3 text-light\">\n                  <h3 className=\"d-flex justify-content-between align-items-center\">\n                     Kontenery&nbsp;\n                     <span className=\"badge bg-success\">JSON</span>\n                     <CopyToClipboard\n                        text={JSON.stringify(containers, null, 2)}\n                        onCopy={() => setCopiedContainersJSON(true)}\n                     >\n                        <button className=\"btn btn-sm btn-secondary ms-auto p-3\">\n                           {copiedContainersJSON ? (\n                              <span>\n                                 Skopiowano listę kontenerów\n                                 <ContentCopyRoundedIcon />\n                              </span>\n                           ) : (\n                              <ContentCopyIcon />\n                           )}\n                        </button>\n                     </CopyToClipboard>\n                  </h3>\n                  <pre>\n                     <code>{JSON.stringify(containers, null, 2)}</code>\n                  </pre>\n               </div>\n            </div>\n\n            {/* images JSON */}\n            <div className=\"col-lg-4 col-md-6 col-12\">\n               <div className=\"p-4 bg-dark rounded-3 text-light\">\n                  <h3 className=\"d-flex justify-content-between align-items-center\">\n                     Obrazy&nbsp;<span className=\"badge bg-success\">JSON</span>\n                     <CopyToClipboard\n                        text={JSON.stringify(images, null, 2)}\n                        onCopy={() => setCopiedImagesJSON(true)}\n                     >\n                        <button className=\"btn btn-sm btn-secondary ms-auto p-3\">\n                           {copiedImagesJSON ? (\n                              <span>\n                                 Skopiowano listę obrazów{\" \"}\n                                 <ContentCopyRoundedIcon />\n                              </span>\n                           ) : (\n                              <ContentCopyIcon />\n                           )}\n                        </button>\n                     </CopyToClipboard>\n                  </h3>\n                  <pre>\n                     <code>{JSON.stringify(images, null, 2)}</code>\n                  </pre>\n               </div>\n            </div>\n         </div>\n         <Footer />\n      </div>\n   );\n}\n\nexport default Dashboard;\n","import React from \"react\";\n\n// import icons\nimport HourglassEmptyRoundedIcon from \"@mui/icons-material/HourglassEmptyRounded\";\n\nfunction LoadingAlert() {\n   return (\n      <div className=\"card card-body shadow text-start bg-success blinking text-light border-0 m-1 mt-4 pt-4\">\n         <h4 className=\"d-flex align-items-center\">\n            <HourglassEmptyRoundedIcon/>\n            &nbsp;<b>Ładowanie</b>\n         </h4>\n      </div>\n   );\n}\n\nexport default LoadingAlert;\n","import React, { useEffect, useState } from \"react\";\n\n// import navigation and footer components\nimport Navigation from \"../components/Navigation.js\";\nimport Footer from \"../components/Footer.js\";\nimport LoadingAlert from \"../components/LoadingAlert.js\";\n\n// import components from recharts library\nimport { XAxis, YAxis, CartesianGrid, BarChart, Bar, Tooltip, Legend, AreaChart, PieChart, Pie, Cell, Area, ResponsiveContainer } from \"recharts\";\n// import config file\nimport config from \"../config.json\";\n\nconst COLORS = [\"#47A025\", \"#00C49F\", \"darkcyan\", \"slateblue\", \"#F2DD6E\", \"#FE4A49\", \"#2AB7CA\"];\n\n\nconst data = [\n   {\n     name: 'Page A',\n     uv: 4000,\n     pv: 2400,\n     amt: 2400,\n   },\n   {\n     name: 'Page B',\n     uv: 3000,\n     pv: 1398,\n     amt: 2210,\n   },\n   {\n     name: 'Page C',\n     uv: 2000,\n     pv: 9800,\n     amt: 2290,\n   },\n   {\n     name: 'Page D',\n     uv: 2780,\n     pv: 3908,\n     amt: 2000,\n   },\n   {\n     name: 'Page E',\n     uv: 1890,\n     pv: 4800,\n     amt: 2181,\n   },\n   {\n     name: 'Page F',\n     uv: 2390,\n     pv: 3800,\n     amt: 2500,\n   },\n   {\n     name: 'Page G',\n     uv: 3490,\n     pv: 4300,\n     amt: 2100,\n   },\n ];\n\n\nfunction ResourcePieChart({ resources, resource }) {\n   // prepare chart data\n   let chart_subject = resource;\n   let chart_data = [];\n\n   try {\n      resources.forEach((container) => {\n         switch (chart_subject) {\n            case \"cpu\":\n               chart_data.push({\n                  name: container.name,\n                  value: (container.cpu_usage / 100) * 100,\n               });\n               break;\n\n            case \"ram\":\n               break;\n\n            case \"disk\":\n               chart_data.push({\n                  name: container.name,\n                  value: container.block_io,\n               });\n               break;\n            case \"network\":\n               chart_data.push({\n                  name: container.name,\n                  value: container.network_io,\n               });\n               break;\n            default:\n               break;\n         }\n      });\n   } catch (error) {\n      console.error(\"could not render resource pie chart\");\n   }\n\n   // return configured PieChart component\n   return (\n      <ResponsiveContainer width=\"100%\" height={350}>\n         <PieChart>\n            <Pie data={chart_data} cx=\"50%\" cy=\"50%\" outerRadius={100} innerRadius={60} paddingAngle={3} fill=\"#8884d8\" dataKey=\"value\" label={{ fontSize: 12 }}>\n               {chart_data.map((entry, index) => (\n                  <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} value={entry.value} />\n               ))}\n            </Pie>\n            <Tooltip />\n            <Legend />\n         </PieChart>\n      </ResponsiveContainer>\n   );\n}\n\nfunction RamPieChart({ resources }) {\n   let arr = [];\n   let all_used_ram = 0;\n\n   // collect all ram used from containers\n   resources.forEach((container) => {\n      let r = 0;\n      try {\n         r = parseFloat(container.memory_usage);\n\n         if (isNaN(r)) {\n            r = 0;\n         }\n      } catch (error) {\n         r = 0;\n      }\n\n      all_used_ram += r;\n   });\n\n   console.log(\"all used ram\");\n   console.log(all_used_ram);\n\n   try {\n      // creating ram resource data set for percentage relation (what containers use how much of available ram)\n      resources.forEach((container) => {\n         let single_container_used_ram = container.memory_usage;\n\n         const v = ((single_container_used_ram * 100) / all_used_ram).toFixed(2);\n\n         let k = parseFloat(v);\n         if (!isNaN(single_container_used_ram)) {\n            arr.push({\n               name: container.name,\n               value: k,\n            });\n         }\n      });\n   } catch (error) {\n      arr = [];\n   }\n\n   return (\n      <ResponsiveContainer width=\"100%\" height={350}>\n         <PieChart>\n            <Pie data={arr} cx=\"50%\" cy=\"50%\" outerRadius={100} innerRadius={60} paddingAngle={3} fill=\"#8884d8\" dataKey=\"value\" label={{ fontSize: 12 }}>\n               {arr.map((entry, index) => (\n                  <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} value={entry.value} />\n               ))}\n            </Pie>\n            <Tooltip />\n            <Legend />\n         </PieChart>\n      </ResponsiveContainer>\n   );\n}\n\nfunction CPUBarChart({ resources }) {\n   // mapping data to correct format\n   const data = resources.map((container) => ({\n      name: container.name,\n      cpu_usage: isNaN(parseFloat(container.cpu_usage)) ? 0 : parseFloat(container.cpu_usage), // safety check\n   }));\n\n   return (\n      <ResponsiveContainer width=\"100%\" height={350}>\n         <BarChart data={data} margin={{ top: 10, right: 5, left: 5, bottom: 70 }}>\n            <CartesianGrid strokeDasharray=\"0.2 0.2\" />   \n            <XAxis dataKey=\"name\" tick={{ fontSize: 7 }} interval={0} textAnchor=\"end\" angle={-90} dy={10} />\n            <YAxis />\n            <Tooltip />\n            <Bar dataKey=\"cpu_usage\" fill={COLORS[3 % COLORS.length]} />\n         </BarChart>\n      </ResponsiveContainer>\n   );\n}\n\n \n\n\n\n\nfunction Resources() {\n   const [loaded, setLoaded] = useState(false);\n   const [resources, setResources] = useState([]);\n\n   useEffect(() => {\n      const dataFetch = async () => {\n         const resources_response = await await fetch(\n            `http://${config.API_SERVER_IP}:${config.API_SERVER_PORT}/api/local/resources` // TODO: extract\n         );\n\n         const fetched_resources = await resources_response.json();\n\n         if (Array.isArray(fetched_resources)) {\n            setResources(fetched_resources);\n         } else {\n            console.error(\"fetching resources from API failed, array was expected but got:\", fetched_resources);\n            setResources([]); // preventing rendering issues, setting empty array\n         }\n\n         setLoaded(true);\n      };\n      dataFetch();\n   }, []);\n\n   return (\n      <div className=\"Resources\">\n         {/* navigation bar*/}\n         <Navigation />\n         <div className=\"row m-0 p-5\" /> {/* empty row just for margin */}\n         {/* first row */}\n         <div className=\"row m-5\">\n            <div className=\"col-lg-4 col-md-3 col-12\">\n               <div className=\"p-4 rounded-3 bg-light text-dark\">\n                  <h4>CPU</h4>\n                  {!loaded ? <LoadingAlert /> :  <CPUBarChart resources={resources} />}\n                  {/* <ResourcePieChart resources={resources} resource={\"cpu\"} /> */}\n               </div>\n            </div>\n\n            <div className=\"col-lg-4 col-md-3 col-12\">\n               <div className=\"p-4 rounded-3 bg-light text-dark\">\n                  <h4>Dysk</h4>\n                  {!loaded ? <LoadingAlert /> : <ResourcePieChart resources={resources} resource={\"disk\"} />}\n               </div>\n            </div>\n\n            <div className=\"col-lg-4 col-md-3 col-12\">\n               <div className=\"p-4 rounded-3 bg-light text-dark\">\n                  <h4>\n                     RAM <small className=\"h6 text-muted\">(procentowo)</small>\n                  </h4>\n                  {!loaded ? <LoadingAlert /> : <RamPieChart resources={resources} />}\n               </div>\n            </div>\n         </div>\n         {/* second row */}\n         <div className=\"row mx-5\">\n            <div className=\"col-lg-8 col-md-7 col-12\">\n               <div className=\"p-4 my-3 rounded-3 bg-light text-dark\">\n                  <h4>Tabela zasobów</h4>\n\n                  <table class=\"table table-light table-hover small\">\n                     <thead>\n                        <tr>\n                           <th scope=\"col\">ID kontenera</th>\n                           <th scope=\"col\">Nazwa</th>\n                           <th scope=\"col\">CPU</th>\n                           <th scope=\"col\">RAM</th>\n                           <th scope=\"col\">RAM Limit</th>\n                           <th scope=\"col\">Sieć</th>\n                           <th scope=\"col\">Dysk</th>\n                        </tr>\n                     </thead>\n                     <tbody>\n                        {resources.map((container, index) => (\n                           <tr key={index}>\n                              <td>{container.id}</td>\n                              <td>{container.name}</td>\n                              <td>{container.cpu_usage}</td>\n                              <td>{container.memory_usage} MB</td>\n                              <td>{container.memory_limit} MB</td>\n                              <td>{container.network_io} B</td>\n                              <td>{container.block_io} B</td>\n                           </tr>\n                        ))}\n                     </tbody>\n                  </table>\n\n                  {!loaded ? <LoadingAlert /> : <span></span>}\n\n                  <h4>Uwaga</h4>\n                  <p>Zasoby sieciowe i dyskowe oznaczają ilość bajtów wysłaną i odebraną / zapisaną i odczytaną od momentu ostatniego uruchomienia kontenera. CPU oznacza ilośc sekund przez ile dany kontener korzysta z zasobów procesora od uruchomienia.</p>\n                  <p>W przypadku Unknown, niektóre kontenery nie raportują wartości wykorzystywanych przez nie zasobów. Kontenery wyłączone nie raportują żadnych zasobów.</p>\n               </div>\n            </div>\n\n            <div className=\"col-lg-4 col-md-7 col-12\">\n               <div className=\"p-4 my-3 rounded-3 bg-light text-dark\">\n                  <h4>Odpowiedź serwera API</h4>\n                  {!loaded ? (\n                     <LoadingAlert />\n                  ) : (\n                     <code>\n                        <pre>{JSON.stringify(resources, null, 2)}</pre>\n                     </code>\n                  )}\n               </div>\n            </div>\n         </div>\n         {/* footer bar */}\n         <Footer />\n      </div>\n   );\n}\n\nexport default Resources;\n","import React, { useEffect, useState } from \"react\";\n\n// import config file\nimport config from \"../config.json\";\n\n// import navigation and footer components\nimport Navigation from \"../components/Navigation.js\";\nimport Footer from \"../components/Footer.js\";\nimport Loading from \"../components/Loading.js\";\n\n// import icons\nimport GridViewIcon from \"@mui/icons-material/GridView\";\n\nfunction Images() {\n   const [loaded, setLoaded] = useState(false);\n   const [images, setImages] = useState([]);\n\n   useEffect(() => {\n      const dataFetch = async () => {\n         const images_response = await await fetch(\n            `http://${config.API_SERVER_IP}:${config.API_SERVER_PORT}/api/local/images`\n         );\n\n         const fetched_images = await images_response.json();\n\n         if (Array.isArray(fetched_images)) {\n            setImages(fetched_images); // set fetched_images as array\n            //setImages(JSON.stringify(instance_response, null, 2)); // set fetched_images as string\n         } else {\n            console.error(\n               \"fetching images from API failed, array was expected but got:\",\n               fetched_images\n            );\n            setImages([]); // preventing rendering issues, setting empty array\n         }\n\n         setLoaded(true);\n      };\n      dataFetch();\n   }, []);\n\n   if (!loaded)\n      return (\n         <Loading />\n      );\n\n   return (\n      <div className=\"Images\">\n         <Navigation />\n         <div className=\"row m-0 p-5\" /> {/* empty row just for margin */}\n         <div className=\"row m-5\">\n            {/* images */}\n            <div className=\"col-lg-12 col-md-12 col-12\">\n               <div className=\"p-4 my-3 bg-dark rounded-3 text-light\">\n                  <h3 className=\"d-flex align-items-center\">\n                     <GridViewIcon />\n                     &nbsp;Obrazy\n                  </h3>\n               </div>\n\n               <div className=\"p-4 bg-dark rounded-3 text-light\">\n                  <table class=\"table table-dark table-hover\">\n                     <thead>\n                        <tr>\n                           <th scope=\"col\">ID</th>\n                           <th scope=\"col\">Nazwa</th>\n                           <th scope=\"col\">Tag</th>\n                           <th scope=\"col\" className=\"text-end\">\n                              Rozmiar\n                           </th>\n                           <th scope=\"col\" className=\"text-end\">\n                              Utworzony\n                           </th>\n                        </tr>\n                     </thead>\n                     <tbody>\n                        {images.map((image, index) => (\n                           <tr key={index}>\n                              <td>{image.id_short}</td>\n                              <td>{image.name}</td>\n                              <td>\n                                 <a\n                                    href={image.tag}\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                 >\n                                    {image.tag}\n                                 </a>\n                              </td>\n                              <td className=\"text-end\">{image.size} MB</td>\n                              <td className=\"text-end\">{image.created}</td>\n                           </tr>\n                        ))}\n                     </tbody>\n                  </table>\n               </div>\n            </div>\n         </div>\n         <Footer />\n      </div>\n   );\n}\n\nexport default Images;\n","import React, { useEffect, useState } from \"react\";\n\n// import config file\nimport config from \"../config.json\";\n\n// import navigation and footer components\nimport Navigation from \"../components/Navigation.js\";\nimport Footer from \"../components/Footer.js\";\nimport Loading from \"../components/Loading.js\";\n\n// import icons\nimport DnsOutlinedIcon from \"@mui/icons-material/DnsOutlined\";\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\nimport CancelIcon from \"@mui/icons-material/Cancel\"; // TODO: implement changing CheckCircleIcon <=> CancelIcon based on instance availabilty\n\nfunction Instances() {\n   const [loaded, setLoaded] = useState(false);\n   const [instances, setInstances] = useState([]);\n\n   useEffect(() => {\n      const dataFetch = async () => {\n         const instances_response = await (\n            await fetch(\n               `http://${config.API_SERVER_IP}:${config.API_SERVER_PORT}/api/instances`\n            )\n         ).json();\n\n         setInstances(instances_response);\n         setLoaded(true);\n      };\n      dataFetch();\n   }, []);\n\n   if (!loaded) return <Loading />;\n\n   return (\n      <div className=\"Instances\">\n         <Navigation />\n         <div className=\"row m-0 p-5\" /> {/* empty row just for margin */}\n         <div className=\"row m-5\">\n            {/* instances */}\n            <div className=\"col-lg-6 col-md-7 col-12\">\n               <div className=\"p-4 my-3 bg-dark rounded-3 text-light\">\n                  <h3 className=\"d-flex align-items-center\">\n                     <DnsOutlinedIcon />\n                     &nbsp;Instancje\n                  </h3>\n               </div>\n               <div className=\"p-4 bg-dark rounded-3 text-light\">\n                  <table className=\"table table-dark table-hover\">\n                     <thead>\n                        <tr>\n                           <th scope=\"col\">Nazwa</th>\n                           <th scope=\"col\">IP</th>\n                           <th scope=\"col\">Port</th>\n                           <th scope=\"col\" className=\"text-end\">\n                              Wersja API\n                           </th>\n                           <th scope=\"col\" className=\"text-end\" >\n                              Status\n                           </th>\n                        </tr>\n                     </thead>\n                     <tbody>\n                        {Object.keys(instances).map((key, index) => {\n                           const instance = instances[key];\n                           return (\n                              <tr key={index}>\n                                 <td>{key}</td>\n                                 <td>{instance.ip}</td>\n                                 <td>{instance.port}</td>\n                                 <td className=\"text-end\">\n                                    {instance.api_version}\n                                 </td>\n                                 <td className=\"text-end\">\n                                    {instance.status ? <CheckCircleIcon className='text-success' /> : <CancelIcon  className='text-danger' />}\n                                 </td>\n                              </tr>\n                           );\n                        })}\n                     </tbody>\n                  </table>\n               </div>\n            </div>\n         </div>\n         <Footer />\n      </div>\n   );\n}\n\nexport default Instances;\n","import React, { useEffect, useState } from \"react\";\n\n// import config file\nimport config from \"../config.json\";\n\n// import navigation and footer components\nimport Navigation from \"../components/Navigation.js\";\nimport Footer from \"../components/Footer.js\";\nimport Loading from \"../components/Loading.js\";\n\n// import icons\nimport ViewInArIcon from \"@mui/icons-material/ViewInAr\";\nimport RemoveCircleOutlineRoundedIcon from \"@mui/icons-material/RemoveCircleOutlineRounded\"; // remove icon\nimport PlayCircleOutlineRoundedIcon from \"@mui/icons-material/PlayCircleOutlineRounded\"; // unpause icon\nimport PauseCircleOutlineRoundedIcon from \"@mui/icons-material/PauseCircleOutlineRounded\"; // pause icon\nimport HistoryRoundedIcon from \"@mui/icons-material/HistoryRounded\";\nimport HighlightOffRoundedIcon from \"@mui/icons-material/HighlightOffRounded\";\nimport PowerSettingsNewRoundedIcon from \"@mui/icons-material/PowerSettingsNewRounded\"; // start icon\n\nconst startContainer = async (containerId, setLoading) => {\n   setLoading(containerId);\n\n   try {\n      const response = await fetch(`http://${config.API_SERVER_IP}:${config.API_SERVER_PORT}/api/local/container/${containerId}/start`, {\n         method: \"POST\",\n      });\n      if (response.ok) {\n         console.log(`Container ${containerId} started successfully`);\n         // Możesz odświeżyć listę kontenerów po wykonaniu akcji\n      } else {\n         console.error(\"Failed to start container\");\n      }\n   } catch (error) {\n      console.error(\"Error starting container:\", error);\n   }\n   setLoading(null);\n};\n\nconst unpauseContainer = async (containerId, setLoading) => {\n   setLoading(containerId);\n\n   try {\n      const response = await fetch(`http://${config.API_SERVER_IP}:${config.API_SERVER_PORT}/api/local/container/${containerId}/unpause`, {\n         method: \"POST\",\n      });\n      if (response.ok) {\n         console.log(`Container ${containerId} unpaused successfully`);\n      } else {\n         console.error(\"Failed to unpause container\");\n      }\n   } catch (error) {\n      console.error(\"Error unpausing container:\", error);\n   }\n   setLoading(null);\n};\n\nconst pauseContainer = async (containerId, setLoading) => {\n   setLoading(containerId);\n\n   try {\n      const response = await fetch(`http://${config.API_SERVER_IP}:${config.API_SERVER_PORT}/api/local/container/${containerId}/pause`, {\n         method: \"POST\",\n      });\n      if (response.ok) {\n         console.log(`Container ${containerId} paused successfully`);\n      } else {\n         console.error(\"Failed to pause container\");\n      }\n   } catch (error) {\n      console.error(\"Error pausing container:\", error);\n   }\n   setLoading(null);\n};\n\nconst stopContainer = async (containerId, setLoading) => {\n   setLoading(containerId);\n\n   try {\n      const response = await fetch(`http://${config.API_SERVER_IP}:${config.API_SERVER_PORT}/api/local/container/${containerId}/stop`, {\n         method: \"POST\",\n      });\n      if (response.ok) {\n         console.log(`Container ${containerId} stopped successfully`);\n      } else {\n         console.error(\"Failed to stop container\");\n      }\n   } catch (error) {\n      console.error(\"Error stopping container:\", error);\n   }\n   setLoading(null);\n};\n\nconst restartContainer = async (containerId, setLoading) => {\n   setLoading(containerId);\n\n   try {\n      const response = await fetch(`http://${config.API_SERVER_IP}:${config.API_SERVER_PORT}/api/local/container/${containerId}/restart`, {\n         method: \"POST\",\n      });\n      if (response.ok) {\n         console.log(`Container ${containerId} restarted successfully`);\n      } else {\n         console.error(\"Failed to restart container\");\n      }\n   } catch (error) {\n      console.error(\"Error restarting container:\", error);\n   }\n   setLoading(null);\n};\n\nconst killContainer = async (containerId, setLoading) => {\n   setLoading(containerId);\n\n   try {\n      const response = await fetch(`http://${config.API_SERVER_IP}:${config.API_SERVER_PORT}/api/local/container/${containerId}/kill`, {\n         method: \"POST\",\n      });\n      if (response.ok) {\n         console.log(`Container ${containerId} killed successfully`);\n      } else {\n         console.error(\"Failed to kill container\");\n      }\n   } catch (error) {\n      console.error(\"Error killing container:\", error);\n   }\n   setLoading(null);\n};\n\nfunction Containers() {\n   const [loaded, setLoaded] = useState(false);\n   const [containers, setContainers] = useState([]);\n   const [loadingAction, setLoadingAction] = useState(null);\n\n   const fetchContainers = async () => {\n      try {\n         const response = await fetch(`http://${config.API_SERVER_IP}:${config.API_SERVER_PORT}/api/local/containers`);\n         const data = await response.json();\n         if (Array.isArray(data)) {\n            setContainers(data);\n         } else {\n            console.error(\"Expected an array but got:\", data);\n            setContainers([]);\n         }\n         setLoaded(true);\n      } catch (error) {\n         console.error(\"Error fetching containers:\", error);\n      }\n   };\n\n   useEffect(() => {\n      fetchContainers();\n      const interval = setInterval(fetchContainers, 5000); // auto-refresh every 3 sec\n      return () => clearInterval(interval);\n   }, []);\n\n   // return loading component if site is not loaded yet\n   if (!loaded) return <Loading />;\n\n   // return correct content\n   return (\n      <div className=\"Containers\">\n         <Navigation />\n         <div className=\"row m-0 p-5\" /> {/* empty row just for margin */}\n         <div className=\"row m-5\">\n            {/* containers */}\n            <div className=\"col-lg-12 col-md-7 col-12\">\n               <div className=\"p-4 my-3 bg-dark rounded-3 text-light\">\n                  <h3 className=\"d-flex align-items-center\">\n                     <ViewInArIcon />\n                     &nbsp;Kontenery\n                  </h3>\n               </div>\n\n               <div className=\"p-4 bg-dark rounded-3 text-light text-sm\">\n                  <div\n                     style={{\n                        overflowX: \"auto\",\n                        maxWidth: \"100%\",\n                        whiteSpace: \"nowrap\",\n                     }}\n                  >\n                     <table class=\"table table-dark table-hover\">\n                        <thead>\n                           <tr>\n                              <th scope=\"col\">\n                                 Akcje\n                                 <br />\n                                 <small className=\"text-secondary\" style={{ fontSize: \"0.7rem\" }}>\n                                    start&nbsp; &nbsp;unpause&nbsp;&nbsp;pause&nbsp; &nbsp;stop &nbsp; &nbsp;restart &nbsp; &nbsp;kill\n                                 </small>\n                              </th>\n                              <th scope=\"col\">ID</th>\n                              <th scope=\"col\">Nazwa</th>\n                              <th scope=\"col\">Obraz</th>\n                              <th scope=\"col\">Porty</th>\n                              <th scope=\"col\">Utworzony</th>\n                              <th scope=\"col\">Stan</th>\n                           </tr>\n                        </thead>\n                        <tbody className=\"small\">\n                           {containers.map((image, index) => (\n                              <tr key={index}>\n                                 <td>\n                                    {/* start button */}\n                                    <button\n                                       type=\"button\"\n                                       className={`btn btn-success align-items-center mx-1 p-1 ${image.status === \"running\" ? \"disabled\" : \"\"}`}\n                                       onClick={() => image.status !== \"running\" && startContainer(image.id, setLoadingAction)} // triggering function works only if state is not 'running'\n                                       disabled={image.status === \"running\" || image.status === \"paused\"} // button disabled if state is 'running' or 'paused'\n                                    >\n                                       <PowerSettingsNewRoundedIcon className=\"text-light\" />\n                                    </button>\n\n                                    {/* unpause button */}\n                                    <button\n                                       type=\"button\"\n                                       className={`btn btn-info align-items-center mx-1 p-1 ${image.status !== \"paused\" ? \"disabled\" : \"\"}`}\n                                       onClick={() => image.status === \"paused\" && unpauseContainer(image.id, setLoadingAction)} // triggering function works only if state is 'paused'\n                                       disabled={image.status !== \"paused\"} // button disabled if state is not 'paused'\n                                    >\n                                       <PlayCircleOutlineRoundedIcon className=\"text-light\" />\n                                    </button>\n\n                                    {/* pause button */}\n                                    <button\n                                       type=\"button\"\n                                       className={`btn btn-warning align-items-center mx-1 p-1 ${image.status !== \"running\" ? \"disabled\" : \"\"}`}\n                                       onClick={() => image.status === \"running\" && pauseContainer(image.id, setLoadingAction)} // triggering function works only if state is 'running'\n                                       disabled={image.status !== \"running\"} // button disabled if state is not 'running'\n                                    >\n                                       <PauseCircleOutlineRoundedIcon className=\"text-light\" />\n                                    </button>\n\n                                    {/* stop button */}\n                                    <button\n                                       type=\"button\"\n                                       className={`btn btn-danger align-items-center mx-1 p-1 ${image.status !== \"running\" ? \"disabled\" : \"\"}`}\n                                       onClick={() => image.status === \"running\" && stopContainer(image.id, setLoadingAction)} // triggering function works only if state is 'running'\n                                       disabled={image.status !== \"running\"} // button disabled if state is not 'running'\n                                    >\n                                       <RemoveCircleOutlineRoundedIcon className=\"text-light\" />\n                                    </button>\n\n                                    {/* restart button */}\n                                    <button type=\"button\" className={`btn btn-primary align-items-center mx-1 p-1 ${image.status !== \"running\" ? \"disabled\" : \"\"}`} onClick={() => image.status === \"running\" && restartContainer(image.id, setLoadingAction)} disabled={image.status !== \"running\"}>\n                                       <HistoryRoundedIcon className=\"text-white\" />\n                                    </button>\n\n                                    {/* kill button */}\n                                    <button type=\"button\" className={`btn btn-danger align-items-center mx-1 p-1 ${image.status !== \"running\" ? \"disabled\" : \"\"}`} onClick={() => image.status === \"running\" && killContainer(image.id, setLoadingAction)} disabled={image.status !== \"running\"}>\n                                       <HighlightOffRoundedIcon />\n                                    </button>\n\n                                    {/* previous implementation: <button type=\"button\" className=\"btn btn-danger align-items-center mx-1 p-1\">\n                                       <HighlightOffRoundedIcon />\n                                    </button> */}\n                                 </td>\n                                 <td>{image.id.substring(0, 16)}...</td>\n                                 <td>{image.name}</td>\n                                 <td>{image.image}</td>\n                                 <td className=\"text-success\">{image.ports || \"-\"}</td>\n                                 <td>{image.created}</td>\n                                 <td>\n                                    <span className={`badge py-2 ${loadingAction === image.id ? \"blinking\" : \"\"} ${image.status === \"running\" ? \"bg-success\" : image.status === \"paused\" ? \"bg-warning\" : image.status === \"exited\" ? \"bg-danger\" : \"bg-secondary\"}`}>\n                                       {loadingAction === image.id ? \"pending\" : image.status}\n                                    </span>\n                                 </td>\n                              </tr>\n                           ))}\n                        </tbody>\n                     </table>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <Footer />\n      </div>\n   );\n}\n\nexport default Containers;\n","import React from \"react\";\nimport { Route, Routes, BrowserRouter } from \"react-router-dom\";\n\n// import custom components\nimport Author from \"./pages/Author.js\";\nimport Dashboard from \"./pages/Dashboard.js\";\nimport Resources from \"./pages/Resources.js\";\nimport Images from \"./pages/Images.js\";\nimport Instances from \"./pages/Instances.js\";\nimport Containers from \"./pages/Containers.js\";\n\nexport default function App() {\n   return (\n      <div className=\"App\">\n         <BrowserRouter>\n            <main id=\"main\">\n               <Routes>\n                  <Route path=\"/\" element={<Dashboard />} />\n                  <Route path=\"/dashboard\" element={<Dashboard />} />\n                  <Route path=\"/author\" element={<Author />} />\n                  <Route path=\"/images\" element={<Images />} />\n                  <Route path=\"/instances\" element={<Instances />} />\n                  <Route path=\"/containers\" element={<Containers />} />\n                  <Route path=\"/resources\" element={<Resources />} />\n               </Routes>\n            </main>\n         </BrowserRouter>\n      </div>\n   );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\n\nimport App from \"./App\";\n\n// load Bootstrap JS\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\n\n// load Bootstrap CSS\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// load custom CSS files\nimport \"./custom.css\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\n\n// render main application\nroot.render(<App />);\n"],"sourceRoot":""}